ATT GÖRA:

--- Lägga till fler Produkter i seedData.js.
--- Fixa så att kategorier läggs till vänster och att det är kopplat (antingen till datan i produkterna eller självstående. Självstående atm)
--- Fixa Frontend Layout
--- Lägga till Search Bar på Navbar (?)
--- Lägga till bilder på produkterna (ej måste tror jag)
--- Ändra ProduktScheman kanske? 


FÖR ATT LÄGGA TILL PRODUKTERNA FRÅN seedData.js till databasen måste vi köra:

1. Ny terminal
2. cd backend/src/seed -------- för att hamna i rätt folder, och sedan köra:
3. node seedData.js

backend dependencies:
npm install express
npm install cors
npm install bcrypt
npm install jsonwebtoken
npm install --dev nodemon (som watch)

frontend dependencies: 
npm install axios, 
npm install react-router-dom,
npm install react-cookie
npm install bootstrap
npm install react-bootstrap bootstrap
npm install react-bootstrap-icons



MongoDB lösenord = potatis

User ID + PW:

MiltonTest
test


                  {/* Description + Scroll funktion för den, behövs inte på förstasidan, men spara ifall att? */}
                  {/* <div className="product-description-scroll">
                    <p className="card-text fs-6 mb-3">{product.description}</p>
                  </div> */}








// Cart med Dubbel Modal
import React, { useState, useEffect } from "react";
import { Modal, Button, Badge } from "react-bootstrap";
import { BsCart3, BsTrash } from "react-icons/bs";
import Payment from "./Payment"; // Import the Payment component

const Cart = ({
  cartItems,
  handleClose,
  removeFromCart,
  showCart,
  updateQuantity,
}) => {
  const [totalPrice, setTotalPrice] = useState(0);
  const [currentStep, setCurrentStep] = useState(1);
  const [showPayment, setShowPayment] = useState(false);

  useEffect(() => {
    let total = 0;
    cartItems.forEach((item) => {
      total += item.price * item.quantity;
    });
    setTotalPrice(total);
  }, [cartItems]);

  const handleNextStep = () => {
    setCurrentStep(currentStep + 1);
  };

  const handlePreviousStep = () => {
    setCurrentStep(currentStep - 1);
  };

  return (
    <div className={`cart-container ${showCart ? "show" : ""}`}>
      <Modal show={true} onHide={handleClose} size="md">
        <div className="modal-dialog modal-dialog-scrollable modal-dialog-centered modal-lg">
          <div className="modal-content">
            <Modal.Header closeButton>
              <Modal.Title className="d-flex justify-content-center align-items-center">
                <BsCart3 size={20} className="me-2" /> Din Varukorg
              </Modal.Title>
            </Modal.Header>
            <Modal.Body style={{ maxHeight: "400px", overflowY: "auto" }}>
              {currentStep === 1 && (
                <>
                  {cartItems.length === 0 ? (
                    <p className="text-center text-muted font-weight-bold">
                      Din varukorg är tom
                    </p>
                  ) : (
                    cartItems.map((item, index) => (
                      <div key={index} className="cart-item">
                        <div className="d-flex align-items-center">
                          <div className="preview-image me-3">
                            <img
                              src={item.imageUrl}
                              alt={item.title}
                              style={{ maxWidth: "100px", maxHeight: "80px" }}
                            />
                          </div>
                          <div>
                            <p>
                              <strong>{item.title}</strong>
                            </p>
                            <p>{item.brand}</p>
                            <p>Pris: {item.price} SEK</p>
                            <div>
                              <Badge
                                pill
                                variant="secondary"
                                className="me-1"
                                onClick={() =>
                                  updateQuantity(item._id, -1)
                                }
                                style={{ cursor: "pointer" }}
                              >
                                -
                              </Badge>
                              <span style={{ margin: "0 10px" }}>
                                {item.quantity}
                              </span>
                              <Badge
                                pill
                                variant="secondary"
                                className="me-1"
                                onClick={() =>
                                  updateQuantity(item._id, 1)
                                }
                                style={{ cursor: "pointer" }}
                              >
                                +
                              </Badge>
                            </div>
                          </div>
                        </div>
                        <Button
                          variant="danger"
                          size="sm"
                          onClick={() => removeFromCart(item)}
                        >
                          <BsTrash />
                        </Button>
                      </div>
                    ))
                  )}
                </>
              )}
              {currentStep === 2 && (
                <Payment cartItems={cartItems} onClose={handleClose} />
              )}
            </Modal.Body>

            <Modal.Footer>
              {currentStep === 1 && (
                <>
                  <Button variant="primary" onClick={handleNextStep}>
                    Gå till betalning
                  </Button>
                  <p>Totalt: {totalPrice} SEK</p>
                </>
              )}
              {currentStep === 2 && (
                <>
                  <Button variant="secondary" onClick={handlePreviousStep}>
                    Tillbaka till varukorgen
                  </Button>
                  <Button variant="primary" onClick={handleClose}>
                    Avsluta
                  </Button>
                </>
              )}
            </Modal.Footer>
          </div>
        </div>
      </Modal>
    </div>
  );
};

export default Cart;
